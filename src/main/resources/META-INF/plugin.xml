<?xml version="1.0" encoding="UTF-8"?>
<idea-plugin url="https://github.com/mplushnikov/lombok-intellij-plugin">
  <id>Lombook Plugin</id>
  <name>Lombok</name>
  <vendor url="https://github.com/mplushnikov/lombok-intellij-plugin" email="lombokplugin@plushnikov.de">Michail
    Plushnikov
  </vendor>
  <version>XXX</version>

  <idea-version since-build="181.00"/>

  <description><![CDATA[ Description will be added by gradle build]]></description>
  <category>Tools Integration</category>

  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>

  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="de.plushnikov.intellij.plugin.activity.LombokPluginUpdateActivity"/>
    <postStartupActivity implementation="de.plushnikov.intellij.plugin.activity.LombokProjectValidatorActivity"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.BuilderHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.SuperBuilderHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.DelegateHandler"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.EqualsAndHashCodeToStringHandler"/>

    <!-- Start of lombok Processors-->
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.ValProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.ValueModifierProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.ValModifierProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.UtilityClassModifierProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.FieldDefaultsModifierProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.AllArgsConstructorProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.NoArgsConstructorProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.RequiredArgsConstructorProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.LogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4j2Processor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Slf4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.XSlf4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.CommonsLogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.JBossLogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.FloggerProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.DataProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.EqualsAndHashCodeProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.GetterProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.SetterProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.ToStringProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.WitherProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassFieldProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassMethodProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderClassProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.method.BuilderClassMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderPreDefinedInnerClassFieldProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderPreDefinedInnerClassMethodProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderClassProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.ValueProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.UtilityClassProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsOldProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.field.FieldNameConstantsFieldProcessor"/>

    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsProcessor"/>
    <applicationService
      serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsPredefinedInnerClassFieldProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.method.DelegateMethodProcessor"/>

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.CleanupProcessor"/>
    <!--    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.SynchronizedProcessor"/>-->

    <projectService serviceImplementation="de.plushnikov.intellij.plugin.provider.LombokProcessorProvider"/>
    <!-- END of lombok Processors-->

    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.lombokconfig.ConfigDiscovery"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.settings.LombokSettings"/>

    <lang.psiAugmentProvider implementation="de.plushnikov.intellij.plugin.provider.LombokAugmentProvider"/>
    <implicitUsageProvider implementation="de.plushnikov.intellij.plugin.provider.LombokImplicitUsageProvider"/>
    <inspectionToolProvider implementation="de.plushnikov.intellij.plugin.provider.LombokInspectionProvider"/>
    <projectConfigurable instance="de.plushnikov.intellij.plugin.settings.ProjectSettingsPage"/>

    <treeGenerator implementation="de.plushnikov.intellij.plugin.extension.LombokLightMethodTreeGenerator"/>

    <lang.structureViewExtension implementation="de.plushnikov.intellij.plugin.extension.LombokStructureViewExtension"/>

    <daemon.highlightInfoFilter implementation="de.plushnikov.intellij.plugin.extension.LombokHighlightErrorFilter"/>

    <fileTypeFactory implementation="de.plushnikov.intellij.plugin.language.LombokConfigFileTypeFactory"/>
    <lang.parserDefinition language="Lombok.Config"
                           implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigParserDefinition"/>
    <lang.syntaxHighlighterFactory language="Lombok.Config"
                                   implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="de.plushnikov.intellij.plugin.language.LombokConfigColorSettingsPage"/>
    <completion.contributor language="Lombok.Config"
                            implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCompletionContributor"/>
    <lang.commenter language="Lombok.Config"
                    implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCommentor"/>
    <fileBasedIndex implementation="de.plushnikov.intellij.plugin.lombokconfig.LombokConfigIndex"/>

    <custom.exception.handler implementation="de.plushnikov.intellij.plugin.handler.SneakyThrowsExceptionHandler"/>

    <implicit.resource.closer
      implementation="de.plushnikov.intellij.plugin.extension.LombokCleanUpImplicitResourceCloser"/>

    <!--    <referencesSearch implementation="de.plushnikov.intellij.plugin.extension.LombokReferenceSearcher"/>-->
    <findUsagesHandlerFactory
      implementation="de.plushnikov.intellij.plugin.extension.LombokFieldFindUsagesHandlerFactory"/>

    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameHandler" order="first"/>
    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameVetoHandler"
                   order="first"/>
    <renamePsiElementProcessor implementation="de.plushnikov.intellij.plugin.extension.LombokRenameMethodProcessor"
                               order="first"/>
    <renamePsiElementProcessor
      implementation="de.plushnikov.intellij.plugin.extension.LombokRenameFieldReferenceProcessor"/>

    <java.elementFinder implementation="de.plushnikov.intellij.plugin.extension.LombokElementFinder" order="last"/>

    <inlineActionHandler implementation="de.plushnikov.intellij.plugin.action.inline.LombokInlineMethodHandler"/>

    <canBeFinal implementation="de.plushnikov.intellij.plugin.extension.LombokCanBeFinalHandler"/>

    <codeInsight.template.postfixTemplateProvider language="JAVA"
                                                  implementationClass="de.plushnikov.intellij.plugin.extension.postfix.LombokPostfixTemplateProvider"/>
  </extensions>

  <actions>
    <!--Override existing action from jetbrains by customized, to support constructor generation for classes with lombok defined constructors-->
    <action id="GenerateConstructor" text="Constructor" overrides="true"
            class="de.plushnikov.intellij.plugin.action.generate.LombokGenerateConstructorAction"/>

    <group id="LombokActionGroup" text="Lombok" description="Refactor code with lombok annotations"
           icon="/icons/lombok.png" popup="true">

      <action id="defaultLombokData" class="de.plushnikov.intellij.plugin.action.lombok.LombokDataAction"
              text="Default @Data"
              description="Action to replace getter/setter/equals/hashcode/toString methods with lombok @Data annotation">
      </action>
      <separator/>
      <action id="defaultLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokGetterAction"
              text="Default @Getter" description="Action to replace all getter methods with lombok @Getter annotation">
      </action>
      <action id="defaultLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokSetterAction"
              text="Default @Setter" description="Action to replace all setter methods with lombok @Setter annotation">
      </action>
      <action id="defaultLombokEqualsAndHashcode"
              class="de.plushnikov.intellij.plugin.action.lombok.LombokEqualsAndHashcodeAction"
              text="Default @EqualsAndHashcode"
              description="Action to replace equals and hashcode methods with lombok @EqualsAndHashcode annotation">
      </action>
      <action id="defaultLombokToString" class="de.plushnikov.intellij.plugin.action.lombok.LombokToStringAction"
              text="Default @ToString" description="Action to replace toString method with lombok @ToString annotation">
      </action>
      <separator/>
      <action id="defaultLombokLogger" class="de.plushnikov.intellij.plugin.action.lombok.LombokLoggerAction"
              text="@Log (and friends)" description="Action to replace logger with lombok @Log annotation">
      </action>

      <!--<separator/>-->
      <!--<action id="generalLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.RefactorGetterAction"-->
      <!--text="Selectable @Getter"-->
      <!--description="Action to replace some getter methods with lombok @Getter annotation">-->
      <!--</action>-->
      <!--<action id="generalLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.RefactorSetterAction"-->
      <!--text="Selectable @Setter"-->
      <!--description="Action to replace some setter methods with lombok @Setter annotation">-->
      <!--</action>-->

      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
    <group id="DelombokActionGroup" text="Delombok" description="Refactor code removing lombok annotations"
           icon="/icons/delombok.png" popup="true">
      <action id="delombokAny" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEverythingAction"
              text="All lombok annotations"
              description="Action to replace all lombok annotations with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokData" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDataAction"
              text="@Data" description="Action to replace lombok @Data annotation with vanilla java methods">
      </action>
      <action id="delombokValue" class="de.plushnikov.intellij.plugin.action.delombok.DelombokValueAction"
              text="@Value" description="Action to replace lombok @Value annotation with vanilla java methods">
      </action>
      <action id="delombokWither" class="de.plushnikov.intellij.plugin.action.delombok.DelombokWitherAction"
              text="@Wither" description="Action to replace lombok @Wither annotation with vanilla java methods">
      </action>
      <action id="delombokDelegate" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDelegateAction"
              text="@Delegate" description="Action to replace lombok @Delegate annotation with vanilla java methods">
      </action>
      <action id="delombokBuilder" class="de.plushnikov.intellij.plugin.action.delombok.DelombokBuilderAction"
              text="@Builder" description="Action to replace lombok @Builder annotation with vanilla java methods">
      </action>
      <action id="delombokSuperBuilder" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSuperBuilderAction"
              text="@SuperBuilder"
              description="Action to replace lombok @SuperBuilder annotation with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokConstructor" class="de.plushnikov.intellij.plugin.action.delombok.DelombokConstructorAction"
              text="@Constructors"
              description="Action to replace lombok @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor annotations with vanilla java methods">
      </action>
      <action id="delombokGetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokGetterAction"
              text="@Getter" description="Action to replace lombok @Getter annotation with vanilla getter methods">
      </action>
      <action id="delombokSetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSetterAction"
              text="@Setter" description="Action to replace lombok @Setter annotation with vanilla setter methods">
      </action>
      <action id="delombokEqualsAndHashCode"
              class="de.plushnikov.intellij.plugin.action.delombok.DelombokEqualsAndHashCodeAction"
              text="@EqualsAndHashCode"
              description="Action to replace lombok @EqualsAndHashCode annotation with vanilla java methods">
      </action>
      <action id="delombokToString" class="de.plushnikov.intellij.plugin.action.delombok.DelombokToStringAction"
              text="@ToString" description="Action to replace lombok @ToString annotation with vanilla java methods">
      </action>
      <separator/>
      <action id="delombokLogger" class="de.plushnikov.intellij.plugin.action.delombok.DelombokLoggerAction"
              text="@Log (and friends)"
              description="Action to replace lombok @Log (and other) annotation with vanilla log field">
      </action>
      <action id="delombokFieldNameCostants"
              class="de.plushnikov.intellij.plugin.action.delombok.DelombokFieldNameConstantsAction"
              text="@FieldNameConstants"
              description="Action to replace lombok @FieldNameConstants annotation with vanilla java fields">
      </action>
      <action id="delombokUtilityClass" class="de.plushnikov.intellij.plugin.action.delombok.DelombokUtilityClassAction"
              text="@UtilityClass"
              description="Action to replace lombok @UtilityClass annotation with vanilla java fields">
      </action>

      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
  </actions>

  <!--<li>TODO: Add generate actions for Lombok equals/hashcode, toString, getter, setter, constructor and maybe logger method</li>-->
  <!--<li>TODO: Add delombok action for @Cleanup, @Synchronized and other annotations</li>-->

  <!--TODO @Builder requires specifying 'builderClassName' if used on methods with a type parameter as return type.-->
  <!--TODO @Builder is not supported on constructors with constructor type parameters..-->
  <change-notes><![CDATA[	Change notes will be filled by gradle build ]]>
  </change-notes>
</idea-plugin>
